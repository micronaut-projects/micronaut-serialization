[versions]
micronaut = "4.0.0-M4"
micronaut-platform = "4.0.0-M2"
micronaut-docs = "2.0.0"
micronaut-gradle-plugin = "4.0.0-M3"
micronaut-test = "4.0.0-M3"
micronaut-discovery = "4.0.0-M1"
micronaut-logging = "1.0.0-M1"

groovy = "4.0.11"
spock = "2.3-groovy-4.0"
kotlin = '1.8.21'
graal-svm = "22.3.2"
aws-lambda-events = '3.11.1'
aws-lambda-serialization = '1.1.2'
microstream-storage-restclient = '08.00.00-MS-GA'

managed-bson = "4.9.1"
managed-jakarta-json-api = "2.1.1"
managed-jakarta-json-bindApi = "3.0.0"
managed-eclipse-parsson = "1.1.1"

micronaut-reactor = "3.0.0-M1"

oracle-jdbc-driver = "23.2.0.0"
jetbrains-annotations = "24.0.1"
jmh = "1.36"

[libraries]
managed-bson = { module = "org.mongodb:bson", version.ref = "managed-bson" }
managed-eclipse-parsson = { module = "org.eclipse.parsson:parsson", version.ref = "managed-eclipse-parsson" }
micronaut-discovery = { module = "io.micronaut.discovery:micronaut-discovery-client", version.ref = "micronaut-discovery" }
micronaut-reactor = { module = "io.micronaut.reactor:micronaut-reactor-bom", version.ref = "micronaut-reactor" }
micronaut-logging = { module = "io.micronaut.logging:micronaut-logging-bom", version.ref = "micronaut-logging" }

managed-jakarta-json-api = { module = "jakarta.json:jakarta.json-api", version.ref = "managed-jakarta-json-api" }
managed-jakarta-json-bindApi = { module = "jakarta.json.bind:jakarta.json.bind-api", version.ref = "managed-jakarta-json-bindApi" }

oracle-jdbc-driver = { module = "com.oracle.database.jdbc:ojdbc8", version.ref = "oracle-jdbc-driver" }
jetbrains-annotations = { module = "org.jetbrains:annotations", version.ref = "jetbrains-annotations" }
aws-lambda-events = { module = "com.amazonaws:aws-lambda-java-events", version.ref = "aws-lambda-events" }
aws-lambda-serialization = { module = "com.amazonaws:aws-lambda-java-serialization", version.ref = "aws-lambda-serialization" }
graal-svm = { module = "org.graalvm.nativeimage:svm", version.ref = "graal-svm" }
microstream-storage-restclient = { module = "one.microstream:microstream-storage-restclient", version.ref = "microstream-storage-restclient" }

jmh-core = { module = "org.openjdk.jmh:jmh-core", version.ref = "jmh" }
jmh-generator-annprocess = { module = "org.openjdk.jmh:jmh-generator-annprocess", version.ref = "jmh" }

#PLUGINS

gradle-micronaut = { module = "io.micronaut.gradle:micronaut-gradle-plugin", version.ref = "micronaut-gradle-plugin" }
kotlin-gradle-plugin = { module = 'org.jetbrains.kotlin:kotlin-gradle-plugin', version.ref = 'kotlin' }
kotlin-gradle-allopen = { module = 'org.jetbrains.kotlin:kotlin-allopen', version.ref = 'kotlin' }
