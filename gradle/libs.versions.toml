[versions]
micronaut = "4.3.1"
micronaut-platform = "4.0.0"
micronaut-docs = "2.0.0"
micronaut-gradle-plugin = "4.2.1"
micronaut-test = "4.2.0"
micronaut-discovery = "4.2.0"
micronaut-logging = "1.2.2"

groovy = "4.0.11"
spock = "2.3-groovy-4.0"
kotlin = '1.9.22'
ksp = '1.9.22-1.0.16'
graal-svm = "23.1.1"
aws-lambda-events = '3.11.4'
oci-sdk = '3.31.0'
aws-lambda-serialization = '1.1.5'
microstream-storage-restclient = '08.01.01-MS-GA'

managed-bson = "4.11.1"
managed-jakarta-json-api = "2.1.3"
managed-jakarta-json-bindApi = "3.0.0"
managed-eclipse-parsson = "1.1.5"

micronaut-reactor = "3.2.1"
micronaut-validation = "4.3.0"

oracle-jdbc-driver = "23.3.0.23.09"
jetbrains-annotations = "24.1.0"
jmh = "1.37"

[libraries]
# Core
micronaut-core = { module = 'io.micronaut:micronaut-core-bom', version.ref = 'micronaut' }
micronaut-validation = { module = 'io.micronaut.validation:micronaut-validation-bom', version.ref = 'micronaut-validation' }

managed-bson = { module = "org.mongodb:bson", version.ref = "managed-bson" }
managed-eclipse-parsson = { module = "org.eclipse.parsson:parsson", version.ref = "managed-eclipse-parsson" }
micronaut-discovery = { module = "io.micronaut.discovery:micronaut-discovery-client", version.ref = "micronaut-discovery" }
micronaut-reactor = { module = "io.micronaut.reactor:micronaut-reactor-bom", version.ref = "micronaut-reactor" }
micronaut-logging = { module = "io.micronaut.logging:micronaut-logging-bom", version.ref = "micronaut-logging" }

managed-jakarta-json-api = { module = "jakarta.json:jakarta.json-api", version.ref = "managed-jakarta-json-api" }
managed-jakarta-json-bindApi = { module = "jakarta.json.bind:jakarta.json.bind-api", version.ref = "managed-jakarta-json-bindApi" }

oracle-jdbc-driver = { module = "com.oracle.database.jdbc:ojdbc8", version.ref = "oracle-jdbc-driver" }
jetbrains-annotations = { module = "org.jetbrains:annotations", version.ref = "jetbrains-annotations" }
aws-lambda-events = { module = "com.amazonaws:aws-lambda-java-events", version.ref = "aws-lambda-events" }
aws-lambda-serialization = { module = "com.amazonaws:aws-lambda-java-serialization", version.ref = "aws-lambda-serialization" }
graal-svm = { module = "org.graalvm.nativeimage:svm", version.ref = "graal-svm" }
microstream-storage-restclient = { module = "one.microstream:microstream-storage-restclient", version.ref = "microstream-storage-restclient" }
junit-jupiter-engine = { module = 'org.junit.jupiter:junit-jupiter-engine' }
junit-jupiter-api = { module = 'org.junit.jupiter:junit-jupiter-api' }
junit-platform-engine = { module = "org.junit.platform:junit-platform-suite-engine" }

jmh-core = { module = "org.openjdk.jmh:jmh-core", version.ref = "jmh" }
jmh-generator-annprocess = { module = "org.openjdk.jmh:jmh-generator-annprocess", version.ref = "jmh" }

oci-aidocument = { module = "com.oracle.oci.sdk:oci-java-sdk-aidocument", version.ref = "oci-sdk"}

#PLUGINS

gradle-micronaut = { module = "io.micronaut.gradle:micronaut-gradle-plugin", version.ref = "micronaut-gradle-plugin" }
kotlin-gradle-plugin = { module = 'org.jetbrains.kotlin:kotlin-gradle-plugin', version.ref = 'kotlin' }
kotlin-gradle-allopen = { module = 'org.jetbrains.kotlin:kotlin-allopen', version.ref = 'kotlin' }
kotlin-gradle-ksp = { module = 'com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin', version.ref = 'ksp' }
